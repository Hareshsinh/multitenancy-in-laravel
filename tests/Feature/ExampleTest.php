<?php

namespace Tests\Feature;

use App\Tenant;
use App\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Contracts\Console\Kernel;
use Tests\TestCase;

class ExampleTest extends TestCase
{
    use RefreshDatabase;


    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        config([
            'database.connection.landlord' => [
                'driver' => 'sqlite',
                'database'=> ':memory:'
            ],
            'database.connection.tenant' => [
                'driver' => 'sqlite',
                'database'=> ':memory:'
            ]
        ]);
        $this->artisan('migrate --database=landlord --path=database/migrations/landlord');
        $this->artisan('migrate --database=tenant');
        $this->app[Kernel::class]->setArtisan(null);
    }

    /**
     * @test
     */
    public function itReruensCurrentTenantAndListOfItUsers() {
        $tenant = factory(Tenant::class)->create();
        $tenant->use();
        factory(User::class,4)->create();
        $responce = $this->getJson('/users');
        $responce->assertJsonCount(4,'/users');
        $responce->assertJsonFragment([
                'name' => $tenant->name,
                'domain' => $tenant->domain,
        ]);
    }
    /**
     * A basic test example.
     *
     * @return void
     */
    public function testBasicTest()
    {
        $response = $this->get('/');

        $response->assertStatus(200);
    }
}
